/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-18 14:22:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import uk.ac.ucl.model.Item;
import java.util.Hashtable;
import java.util.Enumeration;

public final class viewLists_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("uk.ac.ucl.model.Item");
    _jspx_imports_classes.add("java.util.Enumeration");
    _jspx_imports_classes.add("java.util.Hashtable");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>Generic List Application</title>\n");
      out.write("  <div style=\"text-align: center;padding-bottom:3%\"><h1><a class=\"HomePageButton\" href=\"index.html\">Generic List Application</a></h1></div>\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("styles.css\" />\n");
      out.write("</head>\n");

  Hashtable<String, ArrayList<Item>> allLists = (Hashtable<String, ArrayList<Item>>) request.getAttribute("allLists");
  int maxLength = (int) request.getAttribute("maxLength");
  String filePath = "Images/";

      out.write("\n");
      out.write("<body>\n");
      out.write("<div class=\"Title\" style=\"text-align: center;\">\n");
      out.write("  <h2>");
      out.print(allLists.size());
      out.write(" Lists Found</h2>\n");
      out.write("</div>\n");
      out.write("<div class=\"SearchBox\" style=\"text-align: center;\">\n");
      out.write("  <form method=\"POST\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/search.html\">\n");
      out.write("    <div class=\"SearchInput\">\n");
      out.write("      <input type=\"text\" style=\"text-align: center\" placeholder=\"Search\" name=\"searchString\">\n");
      out.write("    </div>\n");
      out.write("    <div class=\"SearchInput\">\n");
      out.write("      <br>\n");
      out.write("      <input type=\"submit\" class=\"SubmitButton\" value=\"ENTER\">\n");
      out.write("    </div>\n");
      out.write("  </form>\n");
      out.write("</div>\n");
      out.write("<div class=\"HintSpace\" style=\"text-align: center;\">\n");
      out.write("  <p>To reset press the enter button on an empty search field!</p>\n");
      out.write("</div>\n");
      out.write("<div class=\"WarningSpace\" style=\"text-align: center;\">\n");
      out.write("  <p>Images are only displayed if they are located in the Images directory in the project structure!</p>\n");
      out.write("  <br>\n");
      out.write("</div>\n");
      out.write("<div class=\"DisplayListBG\" style=\"text-align:center;\">\n");
      out.write("  <div class=\"DisplayTable\" style=\"text-align:center;overflow:auto\">\n");
      out.write("    ");

      if (allLists.size()>0)
      {
    
      out.write("\n");
      out.write("    <table style=\"width:100%;text-align: center;\">\n");
      out.write("      <tr>\n");
      out.write("        <th>List Name</th>\n");
      out.write("        ");

          for(int i = 0; i<maxLength; i++)
          {
        
      out.write("\n");
      out.write("        <th>Item ");
      out.print(i+1);
      out.write("</th>\n");
      out.write("        ");

          }
        
      out.write("\n");
      out.write("      </tr>\n");
      out.write("      ");

        Enumeration<String> allKeys = allLists.keys();
        while(allKeys.hasMoreElements())
        {
          String key = allKeys.nextElement();
          ArrayList<Item> list = allLists.get(key);
      
      out.write("\n");
      out.write("      <tr>\n");
      out.write("        <td>");
      out.print(key);
      out.write("</td>\n");
      out.write("        ");

          int counter = 0;
          for(int i = 0; i < maxLength; i++)
          {
            if (counter<list.size())
            {
              Item item = list.get(i);
              String type = item.getType();
              String value = item.getValue();
              if (type.equals("url"))
              {
        
      out.write("\n");
      out.write("        <td><a href=");
      out.print(value);
      out.write('>');
      out.print(value);
      out.write("</a></td>\n");
      out.write("        ");

        }
        else if (type.equals("listType"))
        {
        
      out.write("\n");
      out.write("        <form method=\"POST\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/search.html\">\n");
      out.write("          <td>\n");
      out.write("            <input type=\"hidden\" name=\"searchString\" value=\"");
      out.print(value);
      out.write("\">\n");
      out.write("            <input type=\"hidden\" name=\"listNameOnly\" value=\"true\">\n");
      out.write("            <input type=\"submit\" class=\"ListButton\" value=\"");
      out.print(value);
      out.write("\">\n");
      out.write("          </td>\n");
      out.write("        </form>\n");
      out.write("        ");

        }
        else if (type.equals("image"))
        {
          
      out.write("\n");
      out.write("            <td>\n");
      out.write("              <img src=\"");
      out.print(filePath+value);
      out.write("\" width=\"50\" height=\"50\">\n");
      out.write("              <p>");
      out.print(value);
      out.write("</p>\n");
      out.write("            </td>\n");
      out.write("        ");

        }
        else
        {
        
      out.write("\n");
      out.write("        <td>");
      out.print(value);
      out.write("</td>\n");
      out.write("        ");

            }
            }
            else
            {
              
      out.write("\n");
      out.write("        <td>");
      out.print(" ");
      out.write("</td>\n");
      out.write("        ");

            }
            counter++;
          }
        
      out.write("\n");
      out.write("      </tr>\n");
      out.write("      ");

        }
      
      out.write("\n");
      out.write("    </table>\n");
      out.write("    ");

      }
    
      out.write("\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
